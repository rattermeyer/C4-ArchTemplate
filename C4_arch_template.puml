' C4-ArchTemplate, version 1.0.0
' https://github.com/rattermeyer/C4-ArchTemplate

' Colors
' ##################################

!define ELEMENT_FONT_COLOR #FFFFFF
!define ELEMENT_FONT_COLOR_BLACK #000000
!define CAPABILITY_BG_COLOR #E5E2E2
!define DOMAIN_BG_COLOR #FFFFF
!define COMPONENT_BG_COLOR #85BBF0
!define NESTED_STEREOTYPE_FONT_SIZE 8


' Styling
' ##################################

!define TECHN_FONT_SIZE 12

skinparam defaultTextAlignment center

skinparam wrapWidth 200
skinparam maxMessageSize 150

skinparam rectangle {
    StereotypeFontSize 12
    FontSize 10
    shadowing false
}

skinparam database {
    StereotypeFontSize 12
    shadowing false
}

skinparam Arrow {
    Color #666666
    FontColor #666666
    FontSize 12
}

skinparam rectangle<<tier>> {
    Shadowing false
    StereotypeFontSize NESTED_STEREOTYPE_FONT_SIZE
    FontColor #444444
    BorderColor #444444
    BorderStyle dashed
}

skinparam rectangle<<CapabilityBoundary>> {
    Shadowing false
    StereotypeFontSize 0
    FontColor #444444
    BorderColor #444444
    BorderStyle dashed
}

skinparam rectangle<<capability>> {
    StereotypeFontColor ELEMENT_FONT_COLOR_BLACK
    FontColor ELEMENT_FONT_COLOR_BLACK
    BackgroundColor CAPABILITY_BG_COLOR
    BorderColor CAPABILITY_BG_COLOR
}

skinparam rectangle<<domain>> {
    Shadowing false
    StereotypeFontSize NESTED_STEREOTYPE_FONT_SIZE
    BackgroundColor DOMAIN_BG_COLOR
    FontColor #444444
    BorderColor #444444
    BorderStyle dashed
}


skinparam rectangle<<technical>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor #000000
    BackgroundColor COMPONENT_BG_COLOR
    BorderColor #78A8D8
}

skinparam database<<technical>> {
    StereotypeFontColor ELEMENT_FONT_COLOR
    FontColor #000000
    BackgroundColor COMPONENT_BG_COLOR
    BorderColor #78A8D8
}

' Layout
' ##################################

!definelong LAYOUT_AS_SKETCH
skinparam handwritten true
skinparam defaultFontName "Comic Sans MS"
center footer <font color=red>Warning:</font> Created for internal use, needs to be beautified for external use
!enddefinelong

!define LAYOUT_TOP_DOWN top to bottom direction
!define LAYOUT_LEFT_RIGHT left to right direction

' Elements
' ##################################

!define Capability(e_alias, e_label) rectangle "==e_label  \n" <<capability>> as e_alias
!define Capability_Alias(e_alias, e_label) rectangle "==e_label  \n" <<capability>> as e_alias

!define Tech_Component(e_alias, e_label) rectangle "==e_label\n" <<technical>> as e_alias
!define Tech_Component(e_alias, e_label, e_techn) rectangle "==e_label\n<size:TECHN_FONT_SIZE>[e_techn]</size>" <<technical>> as e_alias

!define Tech_Component_Db(e_alias, e_label) database "==e_label\n" <<technical>> as e_alias
!define Tech_Component_Db(e_alias, e_label, e_techn) database "==e_label\n<size:TECHN_FONT_SIZE>[e_techn]</size>" <<technical>> as e_alias
' Boundaries
' ##################################

!define Tier(e_alias, e_label) rectangle "==e_label" <<tier>> as e_alias
!define Tier(e_alias, e_label, e_descr) rectangle "==e_label\n\n e_descr" <<tier>> as e_alias
!define Domain(e_alias, e_label) rectangle "==e_label" <<domain>> as e_alias

' Relationship
' ##################################

!define Rel_(e_alias1, e_alias2, e_label, e_direction="") e_alias1 e_direction e_alias2 : === e_label
!define Rel_(e_alias1, e_alias2, e_label, e_techn, e_direction="") e_alias1 e_direction e_alias2 : === e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//

!define Rel(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-->")
!define Rel(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-->")

!define Rel_Back(e_to, e_from, e_label) Rel_(e_to, e_from, e_label, "<--")
!define Rel_Back(e_to, e_from, e_label, e_techn) Rel_(e_to, e_from, e_label, e_techn, "<--")

!define Rel_Neighbor(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "->")
!define Rel_Neighbor(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "->")

!define Rel_Back_Neighbor(e_to, e_from, e_label) Rel_(e_to, e_from, e_label, "<-")
!define Rel_Back_Neighbor(e_to, e_from, e_label, e_techn) Rel_(e_to, e_from, e_label, e_techn, "<-")

!define Rel_D(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-DOWN->")
!define Rel_D(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-DOWN->")
!define Rel_Down(e_from,e_to, e_label) Rel_D(e_from,e_to, e_label)
!define Rel_Down(e_from,e_to, e_label, e_techn) Rel_D(e_from,e_to, e_label, e_techn)

!define Rel_U(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-UP->")
!define Rel_U(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-UP->")
!define Rel_Up(e_from,e_to, e_label) Rel_U(e_from,e_to, e_label)
!define Rel_Up(e_from,e_to, e_label, e_techn) Rel_U(e_from,e_to, e_label, e_techn)

!define Rel_L(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-LEFT->")
!define Rel_L(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-LEFT->")
!define Rel_Left(e_from,e_to, e_label) Rel_L(e_from,e_to, e_label)
!define Rel_Left(e_from,e_to, e_label, e_techn) Rel_L(e_from,e_to, e_label, e_techn)

!define Rel_R(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "-RIGHT->")
!define Rel_R(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "-RIGHT->")
!define Rel_Right(e_from,e_to, e_label) Rel_R(e_from,e_to, e_label)
!define Rel_Right(e_from,e_to, e_label, e_techn) Rel_R(e_from,e_to, e_label, e_techn)

' Layout Helpers
' ##################################

!define Lay_D(e_from, e_to) e_from -[hidden]D- e_to
!define Lay_U(e_from, e_to) e_from -[hidden]U- e_to
!define Lay_R(e_from, e_to) e_from -[hidden]R- e_to
!define Lay_L(e_from, e_to) e_from -[hidden]L- e_to
